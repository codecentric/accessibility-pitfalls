{"version":3,"sources":["SideNavigation.js","TopNavigation.js","SalutationFormGroup.js","NameFormGroup.js","ProfilePageContent.js","App.js","index.js"],"names":["SideNavigation","tabIndex","evolution","undefined","Nav","className","activeKey","onSelect","selectedKey","Item","Link","href","TopNavigation","color","Navbar","bg","variant","Container","Brand","style","Toggle","Collapse","Text","SalutationFormGroup","setFieldValue","values","salutations","FIRST_NAME","firstName","COMPLETE_NAME","lastName","SIMPLE","MISSES","MISTER","Form","Group","as","Row","Label","column","sm","Col","Object","keys","map","salutation","Check","type","onClick","label","checked","name","id","NameFormGroup","isNameSeparated","handleChange","handleBlur","touched","errors","Control","value","onChange","onBlur","isValid","isInvalid","placeholder","Feedback","completeName","profileYupSchema","yup","shape","oneOf","required","min","matches","emailAddress","email","gender","ProfilePageContent","marginBottom","validationSchema","onSubmit","setSubmitting","setTimeout","alert","JSON","stringify","initialValues","handleSubmit","isSubmitting","noValidate","controlId","Select","disabled","Button","App","useState","selectedEvolution","setEvolution","height","marginTop","md","span","offset","ButtonGroup","position","bottom","left","Array","from","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11e721c8.chunk.js","sourcesContent":["import Nav from 'react-bootstrap/Nav'\n\nexport const SideNavigation = ({ evolution }) => {\n    const tabIndex = evolution === 0 ? '-1' : undefined\n\n    return (\n        <Nav\n            className=\"d-md-block bg-light sidebar\"\n            activeKey=\"/my-profile\"\n            onSelect={(selectedKey) => null}\n        >\n            <div className=\"sidebar-sticky\"></div>\n            <Nav.Item>\n                <Nav.Link tabIndex={tabIndex} href=\"#profile\">\n                    My Profile\n                </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n                <Nav.Link tabIndex={tabIndex} href=\"#settings\">\n                    Settings\n                </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n                <Nav.Link tabIndex={tabIndex} href=\"#security\">\n                    Security\n                </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n                <Nav.Link tabIndex={tabIndex} href=\"#notifications\">\n                    Notifications\n                </Nav.Link>\n            </Nav.Item>\n        </Nav>\n    )\n}\n","import Navbar from 'react-bootstrap/Navbar'\nimport Container from 'react-bootstrap/Container'\nimport Nav from 'react-bootstrap/Nav'\n\nexport const TopNavigation = ({ evolution }) => {\n    const tabIndex = evolution === 0 ? '-1' : undefined\n    const color = evolution === 0 ? '#73A1FF' : '#F8F8FF'\n\n    return (\n        <Navbar bg=\"primary\" variant=\"dark\">\n            <Container>\n                <Navbar.Brand href=\"#dashboard\" tabIndex={tabIndex}>\n                    Sportify\n                </Navbar.Brand>\n                <Nav className=\"me-auto\">\n                    <Nav.Link\n                        style={{ color }}\n                        href=\"#dashboard\"\n                        tabIndex={tabIndex}\n                    >\n                        Dashboard\n                    </Nav.Link>\n                    <Nav.Link\n                        style={{ color }}\n                        href=\"#training\"\n                        tabIndex={tabIndex}\n                    >\n                        Training\n                    </Nav.Link>\n                    <Nav.Link\n                        style={{ color }}\n                        href=\"#explore\"\n                        tabIndex={tabIndex}\n                    >\n                        Explore\n                    </Nav.Link>\n                </Nav>\n                <Navbar.Toggle />\n                <Navbar.Collapse className=\"justify-content-end\">\n                    <Navbar.Text style={{ color }}>\n                        Signed in as:{' '}\n                        <a href=\"#profile\" tabIndex={tabIndex}>\n                            Emily HÃ»\n                        </a>\n                    </Navbar.Text>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n    )\n}\n","import Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nexport const SalutationFormGroup = ({ setFieldValue, values }) => {\n    const salutations = {\n        FIRST_NAME: `Hey ${values.firstName}!`,\n        COMPLETE_NAME: `Hey ${values.firstName} ${values.lastName}!`,\n        SIMPLE: `Hey there!`,\n        MISSES: `Hey Mrs. ${values.lastName}!`,\n        MISTER: `Hey Mr. ${values.lastName}!`,\n    }\n\n    return (\n        <fieldset>\n            <Form.Group as={Row} className=\"mb-3\">\n                <Form.Label as=\"legend\" column sm={2} className=\"text-muted\">\n                    Salutation *\n                </Form.Label>\n\n                <Col sm={10}>\n                    {Object.keys(salutations).map((salutation) => (\n                        <Form.Check\n                            type=\"radio\"\n                            tabIndex=\"-1\"\n                            className=\"mb-2\"\n                            onClick={() =>\n                                setFieldValue('salutation', salutation)\n                            }\n                            label={salutations[salutation]}\n                            checked={values.salutation === salutation}\n                            name=\"formHorizontalRadios\"\n                            id=\"formHorizontalRadios1\"\n                        />\n                    ))}\n                </Col>\n            </Form.Group>\n        </fieldset>\n    )\n}\n\nexport const SALUTATIONS = {\n    SIMPLE: 'SIMPLE',\n    FIRST_NAME: 'FIRST_NAME',\n    COMPLETE_NAME: 'COMPLETE_NAME',\n}\n","import Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nexport const NameFormGroup = ({\n    isNameSeparated,\n    tabIndex,\n    handleChange,\n    handleBlur,\n    touched,\n    errors,\n    values,\n}) => {\n    if (isNameSeparated) {\n        return (\n            <Form.Group as={Row} className=\"mb-3\">\n                <Form.Label column sm=\"2\" className=\"text-muted\">\n                    Name *\n                </Form.Label>\n                <Col sm=\"5\">\n                    <Form.Control\n                        tabIndex={tabIndex}\n                        type=\"text\"\n                        value={values.firstName}\n                        name=\"firstName\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        isValid={touched.firstName && !errors.firstName}\n                        isInvalid={!!errors.firstName}\n                        placeholder=\"First name\"\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                        {errors.firstName}\n                    </Form.Control.Feedback>\n                </Col>\n                <Col sm=\"5\">\n                    <Form.Control\n                        tabIndex={tabIndex}\n                        type=\"text\"\n                        name=\"lastName\"\n                        value={values.lastName}\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        isInvalid={!!errors.lastName}\n                        isValid={touched.lastName && !errors.lastName}\n                        placeholder=\"Last name\"\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                        {errors.lastName}\n                    </Form.Control.Feedback>\n                </Col>\n            </Form.Group>\n        )\n    }\n\n    return (\n        <Form.Group as={Row} className=\"mb-3\">\n            <Form.Label column sm=\"2\" className=\"text-muted\">\n                Name *\n            </Form.Label>\n            <Col sm=\"10\">\n                <Form.Control\n                    tabIndex={tabIndex}\n                    type=\"text\"\n                    value={values.completeName}\n                    name=\"completeName\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    isValid={touched.completeName && !errors.completeName}\n                    isInvalid={!!errors.completeName}\n                    placeholder=\"Name\"\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                    {errors.completeName}\n                </Form.Control.Feedback>\n            </Col>\n        </Form.Group>\n    )\n}\n","import { Formik } from 'formik'\nimport Form from 'react-bootstrap/Form'\nimport { SalutationFormGroup, SALUTATIONS } from './SalutationFormGroup'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\nimport * as yup from 'yup'\nimport { NameFormGroup } from './NameFormGroup'\n\nconst profileYupSchema = yup.object().shape({\n    salutation: yup\n        .string()\n        .oneOf(Object.keys(SALUTATIONS), 'Must be one of the provided options'),\n    firstName: yup\n        .string()\n        .required('First name is required')\n        .min(3, 'Not long enough')\n        .matches(/^[a-zA-Z]+$/, 'No special characters please'),\n    lastName: yup\n        .string()\n        .required('Last name is required')\n        .min(3, 'Not long enough')\n        .matches(/^[a-zA-Z]+$/, 'No special characters please'),\n    completeName: yup.string().required('Name is required'),\n    emailAddress: yup\n        .string()\n        .email('Please provide a valid email address')\n        .required('Email address is required'),\n    gender: yup.string().oneOf(['MALE', 'FEMALE'], 'Gender is required'),\n})\n\nexport const ProfilePageContent = ({ evolution }) => {\n    const tabIndex = evolution === 0 ? '-1' : undefined\n\n    return (\n        <>\n            <div className=\"h2\" style={{ marginBottom: 40 }}>\n                My Profile\n            </div>\n\n            <Formik\n                validationSchema={profileYupSchema}\n                onSubmit={(values, { setSubmitting }) => {\n                    setTimeout(() => {\n                        alert(JSON.stringify(values, null, 2))\n                        setSubmitting(false)\n                    }, 100)\n                }}\n                initialValues={{\n                    salutation: 'FIRST_NAME',\n                    firstName: 'Emily',\n                    lastName: 'HÃ»',\n                    completeName: 'Emily HÃ»',\n                    gender: 'MALE',\n                    emailAddress: 'emily.hu@icloud.com',\n                }}\n            >\n                {({\n                    handleSubmit,\n                    handleChange,\n                    handleBlur,\n                    values,\n                    touched,\n                    isSubmitting,\n                    isValid,\n                    errors,\n                    setFieldValue,\n                }) => (\n                    <Form noValidate onSubmit={handleSubmit}>\n                        <NameFormGroup\n                            isNameSeparated={evolution < 2}\n                            {...{\n                                errors,\n                                values,\n                                touched,\n                                tabIndex,\n                                handleChange,\n                                handleBlur,\n                            }}\n                        />\n\n                        {evolution < 3 && (\n                            <Form.Group\n                                as={Row}\n                                className=\"mb-3\"\n                                controlId=\"gender\"\n                            >\n                                <Form.Label\n                                    column\n                                    sm=\"2\"\n                                    className=\"text-muted\"\n                                >\n                                    Gender *\n                                </Form.Label>\n                                <Col sm=\"10\">\n                                    <Form.Select\n                                        tabIndex={tabIndex}\n                                        disabled={true}\n                                        isValid={\n                                            touched.gender && !errors.gender\n                                        }\n                                        isInvalid={!!errors.gender}\n                                        onChange={handleChange}\n                                        value={values.gender}\n                                        name=\"gender\"\n                                    >\n                                        <option value=\"MALE\">Male</option>\n                                        <option value=\"FEMALE\">Female</option>\n                                    </Form.Select>\n                                </Col>\n                            </Form.Group>\n                        )}\n\n                        {evolution >= 3 && (\n                            <SalutationFormGroup\n                                {...{ errors, values, setFieldValue }}\n                            />\n                        )}\n\n                        <Form.Group as={Row} className=\"mb-3\" controlId=\"email\">\n                            <Form.Label column sm=\"2\" className=\"text-muted\">\n                                Email address *\n                            </Form.Label>\n                            <Col sm=\"10\">\n                                <Form.Control\n                                    tabIndex={tabIndex}\n                                    type=\"email\"\n                                    value={values.emailAddress}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    isValid={\n                                        touched.emailAddress &&\n                                        !errors.emailAddress\n                                    }\n                                    isInvalid={!!errors.emailAddress}\n                                    name=\"emailAddress\"\n                                    placeholder=\"Email address\"\n                                />\n                                <Form.Text className=\"text-muted\">\n                                    We'll never share your email address with\n                                    anyone else.\n                                </Form.Text>\n                                <Form.Control.Feedback type=\"invalid\">\n                                    {errors.emailAddress}\n                                </Form.Control.Feedback>\n                            </Col>\n                        </Form.Group>\n\n                        <Button\n                            tabIndex={tabIndex}\n                            variant=\"primary\"\n                            type=\"submit\"\n                            disabled={isSubmitting}\n                        >\n                            Save\n                        </Button>\n                    </Form>\n                )}\n            </Formik>\n        </>\n    )\n}\n","import Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport { SideNavigation } from './SideNavigation'\nimport { TopNavigation } from './TopNavigation'\nimport { ProfilePageContent } from './ProfilePageContent'\nimport { useState } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport { ButtonGroup } from 'react-bootstrap'\n\nconst App = () => {\n    const [selectedEvolution, setEvolution] = useState(0)\n\n    return (\n        <div style={{ height: '100%' }}>\n            <TopNavigation evolution={selectedEvolution} />\n\n            <Container style={{ marginTop: 30 }}>\n                <Row>\n                    <Col sm={12} md={2} id=\"sidebar-wrapper\">\n                        <SideNavigation evolution={selectedEvolution} />\n                    </Col>\n\n                    <Col md={{ span: 9, offset: 1 }} id=\"page-content-wrapper\">\n                        <ProfilePageContent evolution={selectedEvolution} />\n                    </Col>\n                </Row>\n            </Container>\n\n            <ButtonGroup style={{ position: 'absolute', bottom: 30, left: 30 }}>\n                {Array.from(Array(4).keys()).map((evolution) => (\n                    <Button\n                        tabIndex=\"-1\"\n                        variant={\n                            evolution === selectedEvolution\n                                ? 'primary'\n                                : 'secondary'\n                        }\n                        onClick={() => setEvolution(evolution)}\n                    >\n                        {evolution}\n                    </Button>\n                ))}\n            </ButtonGroup>\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n)\n"],"sourceRoot":""}